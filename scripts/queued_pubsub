#!/usr/bin/env python3.7
'''
This experiment tests how a rospy subscriber can pass data into an asyncio event loop.
This is tested in a toy application that takes in numbers, processes them, and publishes them on another topic.
The idea is that the `processing` is an arbitrary CPU task that
'''

import asyncio

# import janus
# import rospy

# class AsyncioPublisher:
#     pass


# class AsyncioSubscriber:
#     pass


class DataProcessor:
    '''Subscribes to an input rostopic, "processes" incoming data, publishes results to an outgoing rostopic.'''
    pass

    def start(self):
        pass


if __name__ == '__main__':
    d = DataProcessor()
    d.start()
    asyncio.get_event_loop().run_forever()
